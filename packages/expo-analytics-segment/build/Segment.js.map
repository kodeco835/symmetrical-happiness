{"version":3,"file":"Segment.js","sourceRoot":"","sources":["../src/Segment.ts"],"names":[],"mappings":"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","sourcesContent":["import { UnavailabilityError } from '@unimodules/core';\nimport { Platform } from 'react-native';\n\nimport ExponentSegment from './ExponentSegment';\n\nexport type InitializeOptions = {\n  androidWriteKey?: string;\n  iosWriteKey?: string;\n};\n\nexport type CommonOptions = { [key: string]: any } | null;\n\nexport function initialize(options: InitializeOptions): void {\n  if (!ExponentSegment.initialize) {\n    throw new UnavailabilityError('expo-analytics-segment', 'initialize');\n  }\n  const platformWriteKey = Platform.select({\n    ios: options.iosWriteKey,\n    android: options.androidWriteKey,\n  });\n  if (platformWriteKey) {\n    ExponentSegment.initialize(platformWriteKey);\n  } else {\n    throw new Error('You must provide a platform-specific write key to initialize Segment.');\n  }\n}\n\nexport function identify(userId: string): void {\n  if (!ExponentSegment.identify) {\n    throw new UnavailabilityError('expo-analytics-segment', 'identify');\n  }\n  ExponentSegment.identify(userId);\n}\n\nexport function identifyWithTraits(\n  userId: string,\n  traits: { [key: string]: any },\n  options: CommonOptions = null\n): void {\n  if (!ExponentSegment.identifyWithTraits) {\n    throw new UnavailabilityError('expo-analytics-segment', 'identifyWithTraits');\n  }\n  ExponentSegment.identifyWithTraits(userId, traits, options);\n}\n\nexport function group(groupId: string): void {\n  if (!ExponentSegment.group) {\n    throw new UnavailabilityError('expo-analytics-segment', 'group');\n  }\n  ExponentSegment.group(groupId);\n}\n\nexport function groupWithTraits(\n  groupId: string,\n  traits: { [key: string]: any },\n  options: CommonOptions = null\n): void {\n  if (!ExponentSegment.groupWithTraits) {\n    throw new UnavailabilityError('expo-analytics-segment', 'groupWithTraits');\n  }\n  ExponentSegment.groupWithTraits(groupId, traits, options);\n}\n\nexport async function alias(newId: string, options: CommonOptions = null): Promise<boolean> {\n  if (!ExponentSegment.alias) {\n    throw new UnavailabilityError('expo-analytics-segment', 'alias');\n  }\n  return await ExponentSegment.alias(newId, options);\n}\n\nexport function reset(): void {\n  if (!ExponentSegment.reset) {\n    throw new UnavailabilityError('expo-analytics-segment', 'reset');\n  }\n  ExponentSegment.reset();\n}\n\nexport function track(event: string): void {\n  if (!ExponentSegment.track) {\n    throw new UnavailabilityError('expo-analytics-segment', 'track');\n  }\n  ExponentSegment.track(event);\n}\n\nexport function trackWithProperties(\n  event: string,\n  properties: { [key: string]: any },\n  options: CommonOptions = null\n): void {\n  if (!ExponentSegment.trackWithProperties) {\n    throw new UnavailabilityError('expo-analytics-segment', 'trackWithProperties');\n  }\n  ExponentSegment.trackWithProperties(event, properties, options);\n}\n\nexport function screen(screenName: string): void {\n  if (!ExponentSegment.screen) {\n    throw new UnavailabilityError('expo-analytics-segment', 'screen');\n  }\n  ExponentSegment.screen(screenName);\n}\n\nexport function screenWithProperties(\n  event: string,\n  properties: { [key: string]: any },\n  options: CommonOptions = null\n): void {\n  if (!ExponentSegment.screenWithProperties) {\n    throw new UnavailabilityError('expo-analytics-segment', 'screenWithProperties');\n  }\n  ExponentSegment.screenWithProperties(event, properties, options);\n}\n\nexport function flush(): void {\n  if (!ExponentSegment.flush) {\n    throw new UnavailabilityError('expo-analytics-segment', 'flush');\n  }\n  ExponentSegment.flush();\n}\n\nexport async function getEnabledAsync(): Promise<boolean> {\n  if (!ExponentSegment.getEnabledAsync) {\n    throw new UnavailabilityError('expo-analytics-segment', 'getEnabledAsync');\n  }\n  const isEnabledNumber = await ExponentSegment.getEnabledAsync();\n  return !!isEnabledNumber;\n}\n\nexport async function setEnabledAsync(enabled: boolean): Promise<void> {\n  if (!ExponentSegment.setEnabledAsync) {\n    throw new UnavailabilityError('expo-analytics-segment', 'setEnabledAsync');\n  }\n  await ExponentSegment.setEnabledAsync(enabled);\n}\n"]}